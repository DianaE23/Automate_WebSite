name: Node.js CICD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x, 20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install 
      - run: npm ci 
      - run: npm run build --if-present
        env:
          CICD: false
      

  push_to_registry:

    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:

      - permissions:
        packages: write
        contents: read
        
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2.2.0
        with:
          password: ${{ secrets.DOCKER_TOKEN }}
          username: ${{ secrets.DOCKER_USERNAME }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REPO }}

#1. Image docker crée et stocker dans la registry dockerhub 
#2. Récuperation de l'image dans le registry dockerhub" 
#3. lancement des conteneurs dans le VPS

deploy:
    needs: push_to_registry
    name: deploy image

    runs-on: ubuntu-latest
    steps:
    - name: deploy and update container on VPS 
      uses: appleboy/ssh-action@main
      with:
        host: ${{ secrets.L1_HOST }}
        username: ${{ secrets.L1_USERNAME }}
        key: ${{ secrets.L1_KEY }}
        port: ${{ secrets.L1_PORT }}
        - run: cd cvcd
        - run: docker-compose stop
        - run: docker-compose rm -f
        - run: docker-compose pull
        - run: docker-compose up -d
